# TechSci Labs Email Testing Platform - Caddy Configuration
# Global options
{
    # Enable admin API
    admin 0.0.0.0:2019
    
    # Email for ACME (Let's Encrypt)
    email admin@techsci.dev
    
    # Default SNI
    default_sni techsci.dev
    
    # Enable experimental features
    experimental_http3
    
    # Security headers
    header {
        # Security headers
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy strict-origin-when-cross-origin
        Permissions-Policy "camera=(), microphone=(), geolocation=()"
        
        # Remove server header for security
        -Server
    }
}

# Development domain (localhost)
localhost, 127.0.0.1 {
    # Frontend (Nuxt.js)
    handle /* {
        reverse_proxy frontend:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # API Backend
    handle /api/* {
        reverse_proxy backend:8000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Webmail
    handle /webmail/* {
        uri strip_prefix /webmail
        reverse_proxy webmail:80 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Mercure Hub
    handle /mercure/* {
        uri strip_prefix /mercure
        reverse_proxy mercure:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Enable CORS for development
    header Access-Control-Allow-Origin "*"
    header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-KEY"
    
    # Handle preflight requests
    @options method OPTIONS
    respond @options 204
    
    # Enable compression
    encode gzip
    
    # Logging for development
    log {
        output file /var/log/caddy/access.log
        format console
        level DEBUG
    }
}

# Production domain
techsci.dev {
    # Frontend (Nuxt.js)
    handle /* {
        reverse_proxy frontend:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
            
            # Health check
            health_uri /api/health
            health_interval 30s
            health_timeout 10s
        }
    }
    
    # Enable compression
    encode {
        gzip 6
        minimum_length 512
        match {
            header Content-Type text/*
            header Content-Type application/json*
            header Content-Type application/javascript*
            header Content-Type application/xml*
            header Content-Type application/rss+xml*
            header Content-Type application/atom+xml*
            header Content-Type image/svg+xml*
        }
    }
    
    # Security headers for production
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-ancestors 'none';"
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy strict-origin-when-cross-origin
    }
    
    # Rate limiting
    rate_limit {
        zone dynamic_requests {
            key {remote}
            events 100
            window 1m
        }
    }
    
    # Logging for production
    log {
        output file /var/log/caddy/techsci-access.log
        format json
        level INFO
    }
}

# API subdomain
api.techsci.dev {
    reverse_proxy backend:8000 {
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        
        # Health check
        health_uri /api/health
        health_interval 30s
        health_timeout 10s
    }
    
    # CORS for API
    @origin header Origin api.techsci.dev
    header @origin Access-Control-Allow-Origin "https://techsci.dev"
    header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-KEY"
    header Access-Control-Allow-Credentials "true"
    
    # Handle preflight requests
    @options method OPTIONS
    respond @options 204
    
    # API Rate limiting
    rate_limit {
        zone api_requests {
            key {remote}
            events 2048
            window 1s
        }
    }
    
    # Enable compression for API responses
    encode gzip
    
    # API-specific logging
    log {
        output file /var/log/caddy/api-access.log
        format json
        level INFO
    }
}

# Webmail subdomain
webmail.techsci.dev {
    reverse_proxy webmail:80 {
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # Security headers for webmail
    header {
        X-Frame-Options SAMEORIGIN
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self';"
    }
    
    # Enable compression
    encode gzip
    
    # Webmail logging
    log {
        output file /var/log/caddy/webmail-access.log
        format json
        level INFO
    }
}

# Mercure subdomain
mercure.techsci.dev {
    reverse_proxy mercure:3000 {
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # CORS for Mercure
    header Access-Control-Allow-Origin "https://techsci.dev"
    header Access-Control-Allow-Methods "GET, POST, OPTIONS"
    header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Last-Event-ID, Cache-Control"
    header Access-Control-Allow-Credentials "true"
    
    # Handle preflight requests
    @options method OPTIONS
    respond @options 204
    
    # Mercure logging
    log {
        output file /var/log/caddy/mercure-access.log
        format json
        level INFO
    }
}

# Docs subdomain (if needed)
docs.techsci.dev {
    root * /var/www/docs
    file_server
    
    # Try files
    try_files {path} {path}/ /index.html
    
    # Security headers
    header {
        X-Frame-Options SAMEORIGIN
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';"
    }
    
    # Enable compression
    encode gzip
    
    # Cache static assets
    @static {
        file
        path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2
    }
    header @static Cache-Control "public, max-age=31536000, immutable"
    
    # Docs logging
    log {
        output file /var/log/caddy/docs-access.log
        format json
        level INFO
    }
}

# Health check endpoint
health.techsci.dev {
    respond /health 200 {
        body "OK"
        close
    }
    
    respond /* 404
}